#!/usr/bin/env python
#
# "Compile" all of the static CSS files. This means that any url()
# references in the CSS file will be transformed into a versioned URL.

import hashlib
import os
import re
import sys

css_re = re.compile(r'^(.*)\.css$')
out_re = re.compile(r'\.out\.css$')
url_re = re.compile(r'\burl\(\s*\'?"?(.*?)\'?"?\s*\)')

def static_url(filename):
    static_path = os.path.join(filename)
    with open(static_path) as f:
        contents = f.read()
    filehash = hashlib.md5(contents).hexdigest()
    return '/%s?v=%s' % (filename, filehash[:5])

def compile_file(filename):
    m = css_re.match(filename)
    assert m
    basename = m.groups()[0]
    with open(filename) as inf:
        with open(basename + '.out.css', 'w') as outf:
            for line in inf:
                for match in url_re.findall(line):
                    match = match.strip()
                    if not match.startswith('/static/'):
                        continue
                    name = match.lstrip('/')
                    line = line.replace(match, static_url(name))
                outf.write(line)


if __name__ == '__main__':
    for f in os.listdir('static/css'):
        if css_re.search(f) and not out_re.search(f):
            compile_file(os.path.join('static/css', f))
